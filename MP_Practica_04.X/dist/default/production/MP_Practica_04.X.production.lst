

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec  9 17:59:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TRISCbits	set	3988
    50  0000                     _CCPR1L	set	4030
    51  0000                     _TMR2	set	4044
    52  0000                     _CCP1CONbits	set	4029
    53  0000                     _T2CONbits	set	4042
    54  0000                     _PR2	set	4043
    55  0000                     _PORTDbits	set	3971
    56  0000                     _ADRESH	set	4036
    57  0000                     _CCP1CON	set	4029
    58  0000                     _ADRESL	set	4035
    59  0000                     _ADCON0bits	set	4034
    60  0000                     _TRISD	set	3989
    61  0000                     _LATD	set	3980
    62  0000                     _PORTD	set	3971
    63  0000                     _ADCON2	set	4032
    64  0000                     _ADCON1	set	4033
    65  0000                     _ADCON0	set	4034
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  007F7C                     __pcinit:
    71                           	callstack 0
    72  007F7C                     start_initialization:
    73                           	callstack 0
    74  007F7C                     __initialization:
    75                           	callstack 0
    76  007F7C                     end_of_initialization:
    77                           	callstack 0
    78  007F7C                     __end_of__initialization:
    79                           	callstack 0
    80  007F7C  0100               	movlb	0
    81  007F7E  EFD7  F03F         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	cstackCOMRAM
    84  000001                     __pcstackCOMRAM:
    85                           	callstack 0
    86  000001                     configPWM@pr2_register:
    87                           	callstack 0
    88  000001                     writeDutyCicle@dutyCicle:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0x0
    92  000001                     	ds	1
    93  000002                     
    94                           ; 1 bytes @ 0x1
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 14 in file "main.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   114 ;;      Params:         0       0       0       0       0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0       0       0       0       0
   116 ;;      Temps:          0       0       0       0       0       0       0       0       0
   117 ;;      Totals:         0       0       0       0       0       0       0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called: 1
   120 ;; This function calls:
   121 ;;		_configPWM
   122 ;;		_writeDutyCicle
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  007FAE                     __ptext0:
   130                           	callstack 0
   131  007FAE                     _main:
   132                           	callstack 30
   133  007FAE                     
   134                           ;main.c: 16:     configPWM(0xFF);
   135  007FAE  0EFF               	movlw	255
   136  007FB0  ECC5  F03F         	call	_configPWM
   137  007FB4                     
   138                           ;main.c: 18:     ADCON0 = 0b00000001;
   139  007FB4  0E01               	movlw	1
   140  007FB6  6EC2               	movwf	194,c	;volatile
   141  007FB8                     
   142                           ;main.c: 19:     ADCON1 = 0b00001110;
   143  007FB8  0E0E               	movlw	14
   144  007FBA  6EC1               	movwf	193,c	;volatile
   145  007FBC                     
   146                           ;main.c: 20:     ADCON2 = 0b00111111;
   147  007FBC  0E3F               	movlw	63
   148  007FBE  6EC0               	movwf	192,c	;volatile
   149  007FC0                     
   150                           ;main.c: 24:     PORTD = 0x00;
   151  007FC0  0E00               	movlw	0
   152  007FC2  6E83               	movwf	131,c	;volatile
   153  007FC4                     
   154                           ;main.c: 25:     LATD = 0x00;
   155  007FC4  0E00               	movlw	0
   156  007FC6  6E8C               	movwf	140,c	;volatile
   157  007FC8                     
   158                           ;main.c: 26:     TRISD = 0b00001100;
   159  007FC8  0E0C               	movlw	12
   160  007FCA  6E95               	movwf	149,c	;volatile
   161  007FCC                     l44:
   162  007FCC  B0C2               	btfsc	194,0,c	;volatile
   163  007FCE  EFEB  F03F         	goto	u11
   164  007FD2  EFED  F03F         	goto	u10
   165  007FD6                     u11:
   166  007FD6  EFE6  F03F         	goto	l44
   167  007FDA                     u10:
   168  007FDA                     
   169                           ;main.c: 30:         writeDutyCicle(ADRESL);
   170  007FDA  50C3               	movf	195,w,c	;volatile
   171  007FDC  ECC1  F03F         	call	_writeDutyCicle
   172  007FE0                     
   173                           ;main.c: 31:         CCP1CON = ADRESH;
   174  007FE0  CFC4 FFBD          	movff	4036,4029	;volatile
   175  007FE4                     
   176                           ;main.c: 32:         PORTDbits.RD3 = PORTDbits.RD1;
   177  007FE4  A283               	btfss	131,1,c	;volatile
   178  007FE6  D002               	bra	u25
   179  007FE8  8683               	bsf	131,3,c	;volatile
   180  007FEA  D001               	bra	u27
   181  007FEC                     u25:
   182  007FEC  9683               	bcf	131,3,c	;volatile
   183  007FEE                     u27:
   184  007FEE                     
   185                           ;main.c: 33:         PORTDbits.RD2 = PORTDbits.RD0;
   186  007FEE  A083               	btfss	131,0,c	;volatile
   187  007FF0  D002               	bra	u35
   188  007FF2  8483               	bsf	131,2,c	;volatile
   189  007FF4  D001               	bra	u37
   190  007FF6                     u35:
   191  007FF6  9483               	bcf	131,2,c	;volatile
   192  007FF8                     u37:
   193  007FF8  EFE6  F03F         	goto	l44
   194  007FFC  EF00  F000         	goto	start
   195  008000                     __end_of_main:
   196                           	callstack 0
   197                           
   198 ;; *************** function _writeDutyCicle *****************
   199 ;; Defined at:
   200 ;;		line 63 in file "main.c"
   201 ;; Parameters:    Size  Location     Type
   202 ;;  dutyCicle       1    wreg     unsigned char 
   203 ;; Auto vars:     Size  Location     Type
   204 ;;  dutyCicle       1    0[COMRAM] unsigned char 
   205 ;; Return value:  Size  Location     Type
   206 ;;                  1    wreg      void 
   207 ;; Registers used:
   208 ;;		wreg
   209 ;; Tracked objects:
   210 ;;		On entry : 0/0
   211 ;;		On exit  : 0/0
   212 ;;		Unchanged: 0/0
   213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   214 ;;      Params:         0       0       0       0       0       0       0       0       0
   215 ;;      Locals:         1       0       0       0       0       0       0       0       0
   216 ;;      Temps:          0       0       0       0       0       0       0       0       0
   217 ;;      Totals:         1       0       0       0       0       0       0       0       0
   218 ;;Total ram usage:        1 bytes
   219 ;; Hardware stack levels used: 1
   220 ;; This function calls:
   221 ;;		Nothing
   222 ;; This function is called by:
   223 ;;		_main
   224 ;; This function uses a non-reentrant model
   225 ;;
   226                           
   227                           	psect	text1
   228  007F82                     __ptext1:
   229                           	callstack 0
   230  007F82                     _writeDutyCicle:
   231                           	callstack 30
   232                           
   233                           ;incstack = 0
   234                           ;writeDutyCicle@dutyCicle stored from wreg
   235  007F82  6E01               	movwf	writeDutyCicle@dutyCicle^0,c
   236  007F84                     
   237                           ;main.c: 64:     CCPR1L = dutyCicle;
   238  007F84  C001  FFBE         	movff	writeDutyCicle@dutyCicle,4030	;volatile
   239  007F88  0012               	return		;funcret
   240  007F8A                     __end_of_writeDutyCicle:
   241                           	callstack 0
   242                           
   243 ;; *************** function _configPWM *****************
   244 ;; Defined at:
   245 ;;		line 39 in file "main.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;  pr2_register    1    wreg     unsigned char 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  pr2_register    1    0[COMRAM] unsigned char 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   259 ;;      Params:         0       0       0       0       0       0       0       0       0
   260 ;;      Locals:         1       0       0       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0
   262 ;;      Totals:         1       0       0       0       0       0       0       0       0
   263 ;;Total ram usage:        1 bytes
   264 ;; Hardware stack levels used: 1
   265 ;; This function calls:
   266 ;;		Nothing
   267 ;; This function is called by:
   268 ;;		_main
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text2
   273  007F8A                     __ptext2:
   274                           	callstack 0
   275  007F8A                     _configPWM:
   276                           	callstack 30
   277                           
   278                           ;incstack = 0
   279                           ;configPWM@pr2_register stored from wreg
   280  007F8A  6E01               	movwf	configPWM@pr2_register^0,c
   281  007F8C                     
   282                           ;main.c: 41:     PR2 = pr2_register;
   283  007F8C  C001  FFCB         	movff	configPWM@pr2_register,4043	;volatile
   284  007F90                     
   285                           ;main.c: 43:     T2CONbits.T2CKPS = 3;
   286  007F90  0E03               	movlw	3
   287  007F92  12CA               	iorwf	202,f,c	;volatile
   288  007F94                     
   289                           ;main.c: 45:     CCP1CONbits.CCP1M0 = 1;
   290  007F94  80BD               	bsf	189,0,c	;volatile
   291  007F96                     
   292                           ;main.c: 46:     CCP1CONbits.CCP1M1 = 1;
   293  007F96  82BD               	bsf	189,1,c	;volatile
   294  007F98                     
   295                           ;main.c: 47:     CCP1CONbits.CCP1M2 = 1;
   296  007F98  84BD               	bsf	189,2,c	;volatile
   297  007F9A                     
   298                           ;main.c: 48:     CCP1CONbits.CCP1M3 = 1;
   299  007F9A  86BD               	bsf	189,3,c	;volatile
   300  007F9C                     
   301                           ;main.c: 51:     TMR2 = 0;
   302  007F9C  0E00               	movlw	0
   303  007F9E  6ECC               	movwf	204,c	;volatile
   304  007FA0                     
   305                           ;main.c: 53:     T2CONbits.TMR2ON = 1;
   306  007FA0  84CA               	bsf	202,2,c	;volatile
   307  007FA2                     
   308                           ;main.c: 56:     CCPR1L = 0x02;
   309  007FA2  0E02               	movlw	2
   310  007FA4  6EBE               	movwf	190,c	;volatile
   311  007FA6                     
   312                           ;main.c: 57:     CCP1CONbits.DC1B0 = 0;
   313  007FA6  98BD               	bcf	189,4,c	;volatile
   314  007FA8                     
   315                           ;main.c: 58:     CCP1CONbits.DC1B1 = 0;
   316  007FA8  9ABD               	bcf	189,5,c	;volatile
   317  007FAA                     
   318                           ;main.c: 60:     TRISCbits.RC2 = 0;
   319  007FAA  9494               	bcf	148,2,c	;volatile
   320  007FAC  0012               	return		;funcret
   321  007FAE                     __end_of_configPWM:
   322                           	callstack 0
   323  0000                     
   324                           	psect	rparam
   325  0000                     
   326                           	psect	idloc
   327                           
   328                           ;Config register IDLOC0 @ 0x200000
   329                           ;	unspecified, using default values
   330  200000                     	org	2097152
   331  200000  FF                 	db	255
   332                           
   333                           ;Config register IDLOC1 @ 0x200001
   334                           ;	unspecified, using default values
   335  200001                     	org	2097153
   336  200001  FF                 	db	255
   337                           
   338                           ;Config register IDLOC2 @ 0x200002
   339                           ;	unspecified, using default values
   340  200002                     	org	2097154
   341  200002  FF                 	db	255
   342                           
   343                           ;Config register IDLOC3 @ 0x200003
   344                           ;	unspecified, using default values
   345  200003                     	org	2097155
   346  200003  FF                 	db	255
   347                           
   348                           ;Config register IDLOC4 @ 0x200004
   349                           ;	unspecified, using default values
   350  200004                     	org	2097156
   351  200004  FF                 	db	255
   352                           
   353                           ;Config register IDLOC5 @ 0x200005
   354                           ;	unspecified, using default values
   355  200005                     	org	2097157
   356  200005  FF                 	db	255
   357                           
   358                           ;Config register IDLOC6 @ 0x200006
   359                           ;	unspecified, using default values
   360  200006                     	org	2097158
   361  200006  FF                 	db	255
   362                           
   363                           ;Config register IDLOC7 @ 0x200007
   364                           ;	unspecified, using default values
   365  200007                     	org	2097159
   366  200007  FF                 	db	255
   367                           
   368                           	psect	config
   369                           
   370                           ;Config register CONFIG1L @ 0x300000
   371                           ;	PLL Prescaler Selection bits
   372                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   373                           ;	System Clock Postscaler Selection bits
   374                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   375                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   376                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   377  300000                     	org	3145728
   378  300000  00                 	db	0
   379                           
   380                           ;Config register CONFIG1H @ 0x300001
   381                           ;	Oscillator Selection bits
   382                           ;	FOSC = HS, HS oscillator (HS)
   383                           ;	Fail-Safe Clock Monitor Enable bit
   384                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   385                           ;	Internal/External Oscillator Switchover bit
   386                           ;	IESO = OFF, Oscillator Switchover mode disabled
   387  300001                     	org	3145729
   388  300001  0C                 	db	12
   389                           
   390                           ;Config register CONFIG2L @ 0x300002
   391                           ;	Power-up Timer Enable bit
   392                           ;	PWRT = OFF, PWRT disabled
   393                           ;	Brown-out Reset Enable bits
   394                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   395                           ;	Brown-out Reset Voltage bits
   396                           ;	BORV = 3, Minimum setting 2.05V
   397                           ;	USB Voltage Regulator Enable bit
   398                           ;	VREGEN = OFF, USB voltage regulator disabled
   399  300002                     	org	3145730
   400  300002  19                 	db	25
   401                           
   402                           ;Config register CONFIG2H @ 0x300003
   403                           ;	Watchdog Timer Enable bit
   404                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   405                           ;	Watchdog Timer Postscale Select bits
   406                           ;	WDTPS = 32768, 1:32768
   407  300003                     	org	3145731
   408  300003  1E                 	db	30
   409                           
   410                           ; Padding undefined space
   411  300004                     	org	3145732
   412  300004  FF                 	db	255
   413                           
   414                           ;Config register CONFIG3H @ 0x300005
   415                           ;	CCP2 MUX bit
   416                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   417                           ;	PORTB A/D Enable bit
   418                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   419                           ;	Low-Power Timer 1 Oscillator Enable bit
   420                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   421                           ;	MCLR Pin Enable bit
   422                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   423  300005                     	org	3145733
   424  300005  01                 	db	1
   425                           
   426                           ;Config register CONFIG4L @ 0x300006
   427                           ;	Stack Full/Underflow Reset Enable bit
   428                           ;	STVREN = ON, Stack full/underflow will cause Reset
   429                           ;	Single-Supply ICSP Enable bit
   430                           ;	LVP = ON, Single-Supply ICSP enabled
   431                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   432                           ;	ICPRT = OFF, ICPORT disabled
   433                           ;	Extended Instruction Set Enable bit
   434                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   435                           ;	Background Debugger Enable bit
   436                           ;	DEBUG = 0x1, unprogrammed default
   437  300006                     	org	3145734
   438  300006  85                 	db	133
   439                           
   440                           ; Padding undefined space
   441  300007                     	org	3145735
   442  300007  FF                 	db	255
   443                           
   444                           ;Config register CONFIG5L @ 0x300008
   445                           ;	Code Protection bit
   446                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   447                           ;	Code Protection bit
   448                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   449                           ;	Code Protection bit
   450                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   451                           ;	Code Protection bit
   452                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   453  300008                     	org	3145736
   454  300008  0F                 	db	15
   455                           
   456                           ;Config register CONFIG5H @ 0x300009
   457                           ;	Boot Block Code Protection bit
   458                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   459                           ;	Data EEPROM Code Protection bit
   460                           ;	CPD = OFF, Data EEPROM is not code-protected
   461  300009                     	org	3145737
   462  300009  C0                 	db	192
   463                           
   464                           ;Config register CONFIG6L @ 0x30000A
   465                           ;	Write Protection bit
   466                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   467                           ;	Write Protection bit
   468                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   469                           ;	Write Protection bit
   470                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   471                           ;	Write Protection bit
   472                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   473  30000A                     	org	3145738
   474  30000A  0F                 	db	15
   475                           
   476                           ;Config register CONFIG6H @ 0x30000B
   477                           ;	Configuration Register Write Protection bit
   478                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   479                           ;	Boot Block Write Protection bit
   480                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   481                           ;	Data EEPROM Write Protection bit
   482                           ;	WRTD = OFF, Data EEPROM is not write-protected
   483  30000B                     	org	3145739
   484  30000B  E0                 	db	224
   485                           
   486                           ;Config register CONFIG7L @ 0x30000C
   487                           ;	Table Read Protection bit
   488                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   489                           ;	Table Read Protection bit
   490                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   491                           ;	Table Read Protection bit
   492                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   493                           ;	Table Read Protection bit
   494                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   495  30000C                     	org	3145740
   496  30000C  0F                 	db	15
   497                           
   498                           ;Config register CONFIG7H @ 0x30000D
   499                           ;	Boot Block Table Read Protection bit
   500                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   501  30000D                     	org	3145741
   502  30000D  40                 	db	64
   503                           tosu	equ	0xFFF
   504                           tosh	equ	0xFFE
   505                           tosl	equ	0xFFD
   506                           stkptr	equ	0xFFC
   507                           pclatu	equ	0xFFB
   508                           pclath	equ	0xFFA
   509                           pcl	equ	0xFF9
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           prodh	equ	0xFF4
   515                           prodl	equ	0xFF3
   516                           indf0	equ	0xFEF
   517                           postinc0	equ	0xFEE
   518                           postdec0	equ	0xFED
   519                           preinc0	equ	0xFEC
   520                           plusw0	equ	0xFEB
   521                           fsr0h	equ	0xFEA
   522                           fsr0l	equ	0xFE9
   523                           wreg	equ	0xFE8
   524                           indf1	equ	0xFE7
   525                           postinc1	equ	0xFE6
   526                           postdec1	equ	0xFE5
   527                           preinc1	equ	0xFE4
   528                           plusw1	equ	0xFE3
   529                           fsr1h	equ	0xFE2
   530                           fsr1l	equ	0xFE1
   531                           bsr	equ	0xFE0
   532                           indf2	equ	0xFDF
   533                           postinc2	equ	0xFDE
   534                           postdec2	equ	0xFDD
   535                           preinc2	equ	0xFDC
   536                           plusw2	equ	0xFDB
   537                           fsr2h	equ	0xFDA
   538                           fsr2l	equ	0xFD9
   539                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_configPWM
    _main->_writeDutyCicle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                          _configPWM
                     _writeDutyCicle
 ---------------------------------------------------------------------------------
 (1) _writeDutyCicle                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configPWM
   _writeDutyCicle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec  9 17:59:50 2021

                     l52 7FAC                       l44 7FCC                       l55 7F88  
                     u10 7FDA                       u11 7FD6                       u25 7FEC  
                     u35 7FF6                       u27 7FEE                       u37 7FF8  
                    l731 7F8C                      l741 7F9A                      l733 7F90  
                    l751 7FA8                      l743 7F9C                      l735 7F94  
                    l753 7FAA                      l745 7FA0                      l737 7F96  
                    l761 7FB8                      l747 7FA2                      l739 7F98  
                    l755 7F84                      l771 7FDA                      l763 7FBC  
                    l749 7FA6                      l773 7FE0                      l765 7FC0  
                    l757 7FAE                      l775 7FE4                      l767 7FC4  
                    l759 7FB4                      l777 7FEE                      l769 7FC8  
                    _PR2 000FCB                     _LATD 000F8C                     _TMR2 000FCC  
                   _main 7FAE                     start 0000             ___param_bank 000000  
       ??_writeDutyCicle 0001                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95          __initialization 7F7C             __end_of_main 8000  
                 ??_main 0002            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 7F7C            ___rparam_used 000001  
         __pcstackCOMRAM 0001    configPWM@pr2_register 0001       __size_of_configPWM 0024  
                _CCP1CON 000FBD                  __Hparam 0000                  __Lparam 0000  
      __end_of_configPWM 7FAE                  __pcinit 7F7C                  __ramtop 0800  
                __ptext0 7FAE                  __ptext1 7F82                  __ptext2 7F8A  
              _T2CONbits 000FCA     end_of_initialization 7F7C                _PORTDbits 000F83  
              _TRISCbits 000F94  __size_of_writeDutyCicle 0008  writeDutyCicle@dutyCicle 0001  
            _CCP1CONbits 000FBD      start_initialization 7F7C                _configPWM 7F8A  
         _writeDutyCicle 7F82               ?_configPWM 0001               _ADCON0bits 000FC2  
 __end_of_writeDutyCicle 7F8A                 __Hrparam 0000                 __Lrparam 0000  
        ?_writeDutyCicle 0001            __size_of_main 0052                 isa$xinst 000000  
            ??_configPWM 0001  
